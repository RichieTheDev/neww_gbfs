name: CI/CD Pipeline

# Trigger the pipeline on pushes to the main branch
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the latest code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Terraform with the specified version
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      # Initialize Terraform configuration
      - name: Terraform Init
        run: terraform init

      # Generate an execution plan for Terraform
      - name: Terraform Plan
        run: terraform plan

      # Apply the Terraform configuration to create/update resources
      - name: Terraform Apply
        run: terraform apply -auto-approve

      # Package and deploy the Lambda function
      - name: Deploy Lambda Function
        run: |
          zip -r function.zip lambda/
          aws s3 cp function.zip s3://${{ secrets.S3_BUCKET_NAME }}/lambda/function.zip
          aws lambda update-function-code --function-name $(terraform output -raw lambda_function_name) --s3-bucket $(terraform output -raw s3_bucket_name) --s3-key lambda/function.zip

      # Upload the Athena query to S3
      - name: Upload Athena Query
        run: |
          aws s3 cp athena_queries/trends.sql s3://${{ secrets.S3_BUCKET_NAME }}/athena/queries/trends.sql

      # Deploy the QuickSight dataset
      - name: Deploy QuickSight Dataset
        run: |
          aws quicksight create-data-set \
            --aws-account-id $(aws sts get-caller-identity --query "Account" --output text) \
            --data-set-id gbfs_trends_dataset \
            --name "GBFS Trends Dataset" \
            --physical-table-map '{"TrendsTable": {"AthenaSource": {"DataSourceArn": "arn:aws:quicksight:us-east-1:$(aws sts get-caller-identity --query "Account" --output text):data-source/AthenaDataSource", "Catalog": "AwsDataCatalog", "Database": "gbfs", "TableName": "trends"}}}' \
            --permissions '[{"Principal": "arn:aws:quicksight:us-east-1:$(aws sts get-caller-identity --query "Account" --output text):user/default/gbfs-user", "Actions": ["quicksight:DescribeDataSet", "quicksight:ListIngestions", "quicksight:DescribeIngestion", "quicksight:PassDataSet"]}]'

      # Notify via email upon successful deployment
      - name: Notify Success
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "Deployment Successful"
          to: richiethedev@gmail.com
          body: "The deployment of the GBFS project was successful."
